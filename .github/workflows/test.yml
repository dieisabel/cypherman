name: test

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
    types: [ ready_for_review ]

jobs:
  build_test:
    name: Build & test
    runs-on: ubuntu-20.04
    steps:
      # Build application
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9.5
      - name: Upgrade pip
        run: pip install --upgrade pip
        shell: bash
      - name: Install poetry
        uses: snok/install-poetry@v1
      - name: Cache virtual environment
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hint != 'true'
        run: poetry install
        shell: bash
        # Poetry gets settings from config file or environment variables
        env:
          # Poetry will create virtual environment
          POETRY_VIRTUALENVS_CREATE: true
          # Poetry will create or use virtual environment that is located in
          # project directory
          POETRY_VIRTUALENVS_IN_PROJECT: true
      - name: Install task
        uses: arduino/setup-task@v1
      # Test application
      - name: Run tests
        run: task test
        shell: bash
